/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i adaptor_marshallers.h -c QSpiTextAdaptor -a text_adaptor org.freedesktop.atspi.Text.xml
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef TEXT_ADAPTOR_H_1239786464
#define TEXT_ADAPTOR_H_1239786464

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "adaptor_marshallers.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.freedesktop.atspi.Text
 */
class QSpiTextAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.atspi.Text")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.freedesktop.atspi.Text\" >\n"
"    <property access=\"read\" type=\"i\" name=\"characterCount\" />\n"
"    <property access=\"read\" type=\"i\" name=\"caretOffset\" />\n"
"    <method name=\"getText\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setCaretOffset\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"getTextBeforeOffset\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"type\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getTextAtOffset\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"type\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getTextAfterOffset\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"type\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getCharacterOffset\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getAttributeValue\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"attributeName\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"b\" name=\"defined\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getAttributes\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getDefaultAttributes\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"getCharacterExtents\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coordType\" />\n"
"    </method>\n"
"    <method name=\"getOffsetAtPoint\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coordType\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getNSelections\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"getSelection\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"selectionNum\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"    </method>\n"
"    <method name=\"addSelection\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"removeSelection\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"selectionNum\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setSelection\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"selectionNum\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"getRangeExtents\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coordType\" />\n"
"    </method>\n"
"    <method name=\"getBoundedRanges\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"width\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"height\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coordType\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"xClipType\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"yClipType\" />\n"
"      <arg direction=\"out\" type=\"a(iisv)\" />\n"
"      <annotation value=\"QSpiRangeList\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\" />\n"
"    </method>\n"
"    <method name=\"getAttributeRun\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"startOffset\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"endOffset\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"includeDefaults\" />\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"getDefaultAttributeSet\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    QSpiTextAdaptor(QObject *parent);
    virtual ~QSpiTextAdaptor();

public: // PROPERTIES
    Q_PROPERTY(int caretOffset READ caretOffset)
    int caretOffset() const;

    Q_PROPERTY(int characterCount READ characterCount)
    int characterCount() const;

public Q_SLOTS: // METHODS
    bool addSelection(int startOffset, int endOffset);
    int getAttributeRun(int offset, bool includeDefaults, int &endOffset, QStringList &out2);
    int getAttributeValue(int offset, const QString &attributeName, int &endOffset, bool &defined, QString &out3);
    int getAttributes(int offset, int &endOffset, QString &out2);
    QSpiRangeList getBoundedRanges(int x, int y, int width, int height, short coordType, uint xClipType, uint yClipType);
    int getCharacterExtents(int offset, short coordType, int &y, int &width, int &height);
    int getCharacterOffset(int offset);
    QStringList getDefaultAttributeSet();
    QString getDefaultAttributes();
    int getNSelections();
    int getOffsetAtPoint(int x, int y, short coordType);
    int getRangeExtents(int startOffset, int endOffset, short coordType, int &y, int &width, int &height);
    int getSelection(int selectionNum, int &endOffset);
    QString getText(int startOffset, int endOffset);
    int getTextAfterOffset(int offset, uint type, int &endOffset, QString &out2);
    int getTextAtOffset(int offset, uint type, int &endOffset, QString &out2);
    int getTextBeforeOffset(int offset, uint type, int &endOffset, QString &out2);
    bool removeSelection(int selectionNum);
    bool setCaretOffset(int offset);
    bool setSelection(int selectionNum, int startOffset, int endOffset);
Q_SIGNALS: // SIGNALS
};

#endif
