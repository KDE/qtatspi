/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i adaptor_marshallers.h -c QSpiApplicationAdaptor -a application_adaptor org.freedesktop.atspi.Application.xml
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "application_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class QSpiApplicationAdaptor
 */

QSpiApplicationAdaptor::QSpiApplicationAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

QSpiApplicationAdaptor::~QSpiApplicationAdaptor()
{
    // destructor
}

int QSpiApplicationAdaptor::id() const
{
    // get the value of property id
    return qvariant_cast< int >(parent()->property("id"));
}

void QSpiApplicationAdaptor::setId(int value)
{
    // set the value of property id
    parent()->setProperty("id", value);
}

QString QSpiApplicationAdaptor::toolkitName() const
{
    // get the value of property toolkitName
    return qvariant_cast< QString >(parent()->property("toolkitName"));
}

QString QSpiApplicationAdaptor::version() const
{
    // get the value of property version
    return qvariant_cast< QString >(parent()->property("version"));
}

QString QSpiApplicationAdaptor::getLocale(uint lctype)
{
    // handle method call org.freedesktop.atspi.Application.getLocale
    QString out0;
    QMetaObject::invokeMethod(parent(), "getLocale", Q_RETURN_ARG(QString, out0), Q_ARG(uint, lctype));
    return out0;
}

bool QSpiApplicationAdaptor::pause()
{
    // handle method call org.freedesktop.atspi.Application.pause
    bool out0;
    QMetaObject::invokeMethod(parent(), "pause", Q_RETURN_ARG(bool, out0));
    return out0;
}

void QSpiApplicationAdaptor::registerObjectEventListener(const QDBusObjectPath &listener, const QString &eventName)
{
    // handle method call org.freedesktop.atspi.Application.registerObjectEventListener
    QMetaObject::invokeMethod(parent(), "registerObjectEventListener", Q_ARG(QDBusObjectPath, listener), Q_ARG(QString, eventName));
}

void QSpiApplicationAdaptor::registerToolkitEventListener(const QDBusObjectPath &listener, const QString &eventName)
{
    // handle method call org.freedesktop.atspi.Application.registerToolkitEventListener
    QMetaObject::invokeMethod(parent(), "registerToolkitEventListener", Q_ARG(QDBusObjectPath, listener), Q_ARG(QString, eventName));
}

bool QSpiApplicationAdaptor::resume()
{
    // handle method call org.freedesktop.atspi.Application.resume
    bool out0;
    QMetaObject::invokeMethod(parent(), "resume", Q_RETURN_ARG(bool, out0));
    return out0;
}

