/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i adaptor_marshallers.h -c QSpiEditableTextAdaptor -a editable_text_adaptor org.freedesktop.atspi.EditableText.xml
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef EDITABLE_TEXT_ADAPTOR_H_1242636765
#define EDITABLE_TEXT_ADAPTOR_H_1242636765

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "adaptor_marshallers.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.freedesktop.atspi.EditableText
 */
class QSpiEditableTextAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.atspi.EditableText")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.freedesktop.atspi.EditableText\" >\n"
"    <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"      <p>Derived from interface Text, EditableText provides methods for\n"
"      modifying textual content of components which support editing.\n"
"      EditableText also interacts with the system clipboard via copyText,\n"
"      cutText, and pasteText.  </p>\n"
"      <p>Read-only instances of EditableText are possible; \n"
"      These may be instances of a general-purpose component type which are\n"
"      sometimes, but not always, user-editable, or may be\n"
"      components which are temporarily or circumstantially\n"
"      in a non-editable state. </p>\n"
"    </tp:docstring>\n"
"    <method name=\"setTextContents\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Replace the text contents with a new string, discarding the old contents.    </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"s\" name=\"newContents\" >\n"
"        <tp:docstring>\n"
"      A UTF-8 string with which the text object's contents will be replaced.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"out\" tp:type=\"boolean\" type=\"b\" >\n"
"        <tp:docstring>\n"
"          <code>True</code> if the text content was successfully changed, <code>False</code> otherwise.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"insertText\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Insert new text contents into an existing text object at a given location, while retaining\n"
"        the old contents.\n"
"      </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"i\" name=\"position\" >\n"
"        <tp:docstring>\n"
"        The character offset into the Text implementor's content at which the\n"
"        new content will be inserted.\n"
"	    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"s\" name=\"text\" >\n"
"        <tp:docstring>\n"
"		    A UTF-8 string of which <code>length</code> characters will be inserted into the text \n"
"        object's text buffer.\n"
"	    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"i\" name=\"length\" >\n"
"        <tp:docstring>\n"
"		    The number of characters of <code>text</code> to insert.  If the character count\n"
"		    of <code>text</code> is less than or equal to <code>length</code>, the entire contents\n"
"		    of <code>text</code> will be inserted.    \n"
"	    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"out\" tp:type=\"boolean\" type=\"b\" >\n"
"        <tp:docstring>\n"
"          <code>True</code> if the text content was successfully inserted, <code>False</code> otherwise.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"copyText\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Copy a range of text into the system clipboard.\n"
"      </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"i\" name=\"startPos\" >\n"
"        <tp:docstring>\n"
"        The character offset of the first character in the range of text being\n"
"        copied.\n"
"    	    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"i\" name=\"endPos\" >\n"
"        <tp:docstring>\n"
"        The offset of the first character past the end of the range of text\n"
"	being copied.\n"
"    	    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"cutText\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Excise a range of text from a Text object, copying it into the system clipboard.  </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"i\" name=\"startPos\" >\n"
"        <tp:docstring>\n"
"        The character offset of the first character in the range of text being\n"
"        cut.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"i\" name=\"endPos\" >\n"
"        <tp:docstring>\n"
"        The offset of the first character past the end of the range of text\n"
"	being cut.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"out\" tp:type=\"boolean\" type=\"b\" >\n"
"        <tp:docstring>\n"
"          <code>True</code> if the text was successfully cut, <code>False</code> otherwise.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"deleteText\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Excise a range of text from a Text object without copying it into the system clipboard.  </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"i\" name=\"startPos\" >\n"
"        <tp:docstring>\n"
"        The character offset of the first character in the range of text being\n"
"        deleted.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"in\" type=\"i\" name=\"endPos\" >\n"
"        <tp:docstring>\n"
"        The offset of the first character past the end of the range of text\n"
"	being deleted.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"out\" tp:type=\"boolean\" type=\"b\" >\n"
"        <tp:docstring>\n"
"          <code>True</code> if the text was successfully deleted, <code>False</code> otherwise.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"pasteText\" >\n"
"      <tp:docstring xmlns=\"http://www.w3.org/1999/xhtml\" >\n"
"        <p>Copy the text contents of the system clipboard, if any, into a Text object, \n"
"        inserting it at a particular character offset.    </p>\n"
"      </tp:docstring>\n"
"      <arg direction=\"in\" type=\"i\" name=\"position\" >\n"
"        <tp:docstring>\n"
"          <p>The character offset before which the text will be inserted.</p>\n"
"        </tp:docstring>\n"
"      </arg>\n"
"      <arg direction=\"out\" tp:type=\"boolean\" type=\"b\" >\n"
"        <tp:docstring>\n"
"          <code>True</code> if the text was successfully pasted into the Text object, <code>False</code> otherwise.\n"
"    </tp:docstring>\n"
"      </arg>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    QSpiEditableTextAdaptor(QObject *parent);
    virtual ~QSpiEditableTextAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void copyText(int startPos, int endPos);
    bool cutText(int startPos, int endPos);
    bool deleteText(int startPos, int endPos);
    bool insertText(int position, const QString &text, int length);
    bool pasteText(int position);
    bool setTextContents(const QString &newContents);
Q_SIGNALS: // SIGNALS
};

#endif
