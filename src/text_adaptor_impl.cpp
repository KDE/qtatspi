/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i adaptor_marshallers.h -c QSpiTextAdaptor -a text_adaptor org.freedesktop.atspi.Text.xml
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "text_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class QSpiTextAdaptor
 */

QSpiTextAdaptor::QSpiTextAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

QSpiTextAdaptor::~QSpiTextAdaptor()
{
    // destructor
}

int QSpiTextAdaptor::caretOffset() const
{
    // get the value of property caretOffset
    return qvariant_cast< int >(parent()->property("caretOffset"));
}

int QSpiTextAdaptor::characterCount() const
{
    // get the value of property characterCount
    return qvariant_cast< int >(parent()->property("characterCount"));
}

bool QSpiTextAdaptor::addSelection(int startOffset, int endOffset)
{
    // handle method call org.freedesktop.atspi.Text.addSelection
    bool out0;
    QMetaObject::invokeMethod(parent(), "addSelection", Q_RETURN_ARG(bool, out0), Q_ARG(int, startOffset), Q_ARG(int, endOffset));
    return out0;
}

int QSpiTextAdaptor::getAttributeRun(int offset, bool includeDefaults, int &endOffset, QStringList &out2)
{
    // handle method call org.freedesktop.atspi.Text.getAttributeRun
    //return static_cast<YourObjectType *>(parent())->getAttributeRun(offset, includeDefaults, endOffset, out2);
}

int QSpiTextAdaptor::getAttributeValue(int offset, const QString &attributeName, int &endOffset, bool &defined, QString &out3)
{
    // handle method call org.freedesktop.atspi.Text.getAttributeValue
    //return static_cast<YourObjectType *>(parent())->getAttributeValue(offset, attributeName, endOffset, defined, out3);
}

int QSpiTextAdaptor::getAttributes(int offset, int &endOffset, QString &out2)
{
    // handle method call org.freedesktop.atspi.Text.getAttributes
    //return static_cast<YourObjectType *>(parent())->getAttributes(offset, endOffset, out2);
}

QSpiRangeList QSpiTextAdaptor::getBoundedRanges(int x, int y, int width, int height, short coordType, uint xClipType, uint yClipType)
{
    // handle method call org.freedesktop.atspi.Text.getBoundedRanges
    QSpiRangeList out0;
    QMetaObject::invokeMethod(parent(), "getBoundedRanges", Q_RETURN_ARG(QSpiRangeList, out0), Q_ARG(int, x), Q_ARG(int, y), Q_ARG(int, width), Q_ARG(int, height), Q_ARG(short, coordType), Q_ARG(uint, xClipType), Q_ARG(uint, yClipType));
    return out0;
}

int QSpiTextAdaptor::getCharacterExtents(int offset, short coordType, int &y, int &width, int &height)
{
    // handle method call org.freedesktop.atspi.Text.getCharacterExtents
    //return static_cast<YourObjectType *>(parent())->getCharacterExtents(offset, coordType, y, width, height);
}

int QSpiTextAdaptor::getCharacterOffset(int offset)
{
    // handle method call org.freedesktop.atspi.Text.getCharacterOffset
    int out0;
    QMetaObject::invokeMethod(parent(), "getCharacterOffset", Q_RETURN_ARG(int, out0), Q_ARG(int, offset));
    return out0;
}

QStringList QSpiTextAdaptor::getDefaultAttributeSet()
{
    // handle method call org.freedesktop.atspi.Text.getDefaultAttributeSet
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getDefaultAttributeSet", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QString QSpiTextAdaptor::getDefaultAttributes()
{
    // handle method call org.freedesktop.atspi.Text.getDefaultAttributes
    QString out0;
    QMetaObject::invokeMethod(parent(), "getDefaultAttributes", Q_RETURN_ARG(QString, out0));
    return out0;
}

int QSpiTextAdaptor::getNSelections()
{
    // handle method call org.freedesktop.atspi.Text.getNSelections
    int out0;
    QMetaObject::invokeMethod(parent(), "getNSelections", Q_RETURN_ARG(int, out0));
    return out0;
}

int QSpiTextAdaptor::getOffsetAtPoint(int x, int y, short coordType)
{
    // handle method call org.freedesktop.atspi.Text.getOffsetAtPoint
    int out0;
    QMetaObject::invokeMethod(parent(), "getOffsetAtPoint", Q_RETURN_ARG(int, out0), Q_ARG(int, x), Q_ARG(int, y), Q_ARG(short, coordType));
    return out0;
}

int QSpiTextAdaptor::getRangeExtents(int startOffset, int endOffset, short coordType, int &y, int &width, int &height)
{
    // handle method call org.freedesktop.atspi.Text.getRangeExtents
    //return static_cast<YourObjectType *>(parent())->getRangeExtents(startOffset, endOffset, coordType, y, width, height);
}

int QSpiTextAdaptor::getSelection(int selectionNum, int &endOffset)
{
    // handle method call org.freedesktop.atspi.Text.getSelection
    //return static_cast<YourObjectType *>(parent())->getSelection(selectionNum, endOffset);
}

QString QSpiTextAdaptor::getText(int startOffset, int endOffset)
{
    // handle method call org.freedesktop.atspi.Text.getText
    QString out0;
    QMetaObject::invokeMethod(parent(), "getText", Q_RETURN_ARG(QString, out0), Q_ARG(int, startOffset), Q_ARG(int, endOffset));
    return out0;
}

int QSpiTextAdaptor::getTextAfterOffset(int offset, uint type, int &endOffset, QString &out2)
{
    // handle method call org.freedesktop.atspi.Text.getTextAfterOffset
    //return static_cast<YourObjectType *>(parent())->getTextAfterOffset(offset, type, endOffset, out2);
}

int QSpiTextAdaptor::getTextAtOffset(int offset, uint type, int &endOffset, QString &out2)
{
    // handle method call org.freedesktop.atspi.Text.getTextAtOffset
    //return static_cast<YourObjectType *>(parent())->getTextAtOffset(offset, type, endOffset, out2);
}

int QSpiTextAdaptor::getTextBeforeOffset(int offset, uint type, int &endOffset, QString &out2)
{
    // handle method call org.freedesktop.atspi.Text.getTextBeforeOffset
    //return static_cast<YourObjectType *>(parent())->getTextBeforeOffset(offset, type, endOffset, out2);
}

bool QSpiTextAdaptor::removeSelection(int selectionNum)
{
    // handle method call org.freedesktop.atspi.Text.removeSelection
    bool out0;
    QMetaObject::invokeMethod(parent(), "removeSelection", Q_RETURN_ARG(bool, out0), Q_ARG(int, selectionNum));
    return out0;
}

bool QSpiTextAdaptor::setCaretOffset(int offset)
{
    // handle method call org.freedesktop.atspi.Text.setCaretOffset
    bool out0;
    QMetaObject::invokeMethod(parent(), "setCaretOffset", Q_RETURN_ARG(bool, out0), Q_ARG(int, offset));
    return out0;
}

bool QSpiTextAdaptor::setSelection(int selectionNum, int startOffset, int endOffset)
{
    // handle method call org.freedesktop.atspi.Text.setSelection
    bool out0;
    QMetaObject::invokeMethod(parent(), "setSelection", Q_RETURN_ARG(bool, out0), Q_ARG(int, selectionNum), Q_ARG(int, startOffset), Q_ARG(int, endOffset));
    return out0;
}

