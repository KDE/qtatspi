/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp org.freedesktop.atspi.Registry.xml -i proxy-marshallers.h -c QSpiRegistryProxy -p registry-proxy
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef REGISTRY-PROXY_H_1237805684
#define REGISTRY-PROXY_H_1237805684

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "proxy_marshallers.h"

/*
 * Proxy class for interface org.freedesktop.atspi.Registry
 */
class QSpiRegistryProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.atspi.Registry"; }

public:
    QSpiRegistryProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~QSpiRegistryProxy();

public Q_SLOTS: // METHODS
    inline QDBusReply<void> deregisterApplication(const QString &app)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(app);
        return callWithArgumentList(QDBus::Block, QLatin1String("deregisterApplication"), argumentList);
    }

    inline QDBusReply<QStringList> getApplications()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::NoBlock, QLatin1String("getApplications"), argumentList);
    }

    inline QDBusReply<void> registerApplication(const QString &app)
    {
        QList<QVariant> argumentList;
        QString methodname = QLatin1String("registerApplication");
        argumentList << qVariantFromValue(app);
        return callWithArgumentList(QDBus::NoBlock, methodname, argumentList);
    }

Q_SIGNALS: // SIGNALS
    void updateApplications(const QSpiAppUpdate &app);
};

namespace org {
  namespace freedesktop {
    namespace atspi {
      typedef ::QSpiRegistryProxy Registry;
    }
  }
}
#endif
