/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -i adaptor_marshallers.h -c QSpiComponentAdaptor -a component_adaptor org.freedesktop.atspi.Component.xml
 *
 * dbusxml2cpp is Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COMPONENT_ADAPTOR_H_1239786287
#define COMPONENT_ADAPTOR_H_1239786287

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "adaptor_marshallers.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.freedesktop.atspi.Component
 */
class QSpiComponentAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.atspi.Component")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.freedesktop.atspi.Component\" >\n"
"    <method name=\"contains\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coord_type\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"getAccessibleAtPoint\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"      <arg direction=\"in\" type=\"n\" name=\"coord_type\" />\n"
"      <arg direction=\"out\" type=\"o\" />\n"
"    </method>\n"
"    <method name=\"getExtents\" >\n"
"      <arg direction=\"in\" type=\"n\" name=\"coord_type\" />\n"
"      <arg direction=\"out\" type=\"(iiii)\" />\n"
"      <annotation value=\"QSpiRect\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\" />\n"
"    </method>\n"
"    <method name=\"getPosition\" >\n"
"      <arg direction=\"in\" type=\"n\" name=\"coord_type\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\" />\n"
"    </method>\n"
"    <method name=\"getSize\" >\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\" />\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\" />\n"
"    </method>\n"
"    <method name=\"getLayer\" >\n"
"      <arg direction=\"out\" type=\"u\" />\n"
"    </method>\n"
"    <method name=\"getMDIZOrder\" >\n"
"      <arg direction=\"out\" type=\"n\" />\n"
"    </method>\n"
"    <method name=\"grabFocus\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"registerFocusHandler\" >\n"
"      <arg direction=\"in\" type=\"o\" name=\"handler\" />\n"
"    </method>\n"
"    <method name=\"deregisterFocusHandler\" >\n"
"      <arg direction=\"in\" type=\"o\" name=\"handler\" />\n"
"    </method>\n"
"    <method name=\"getAlpha\" >\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    QSpiComponentAdaptor(QObject *parent);
    virtual ~QSpiComponentAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool contains(int x, int y, short coord_type);
    void deregisterFocusHandler(const QDBusObjectPath &handler);
    QDBusObjectPath getAccessibleAtPoint(int x, int y, short coord_type);
    double getAlpha();
    QSpiRect getExtents(short coord_type);
    uint getLayer();
    short getMDIZOrder();
    int getPosition(short coord_type, int &y);
    int getSize(int &height);
    bool grabFocus();
    void registerFocusHandler(const QDBusObjectPath &handler);
Q_SIGNALS: // SIGNALS
};

#endif
