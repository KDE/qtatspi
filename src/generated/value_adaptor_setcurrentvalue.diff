diff --git a/src/adaptor.cpp b/src/adaptor.cpp
index 7dacae0..04312c9 100644
--- a/src/adaptor.cpp
+++ b/src/adaptor.cpp
@@ -1192,7 +1192,7 @@ double QSpiAdaptor::currentValue() const
     }
 }
 
-void QSpiAdaptor::setCurrentValue(double value)
+void QSpiAdaptor::SetCurrentValue(double value)
 {
     if (!checkInterface()) return;
     interface->valueInterface()->setCurrentValue(QVariant (value));
diff --git a/src/adaptor.h b/src/adaptor.h
index 2294170..480bd8f 100644
--- a/src/adaptor.h
+++ b/src/adaptor.h
@@ -223,9 +223,9 @@ public Q_SLOTS:
 
 /* AT-SPI Text interface */
 public:
-    Q_PROPERTY(double CurrentValue READ currentValue WRITE setCurrentValue)
+    Q_PROPERTY(double CurrentValue READ currentValue WRITE SetCurrentValue)
     double currentValue() const;
-    void setCurrentValue(double value);
+    void SetCurrentValue(double value);
     Q_PROPERTY(double MaximumValue READ maximumValue)
     double maximumValue() const;
     Q_PROPERTY(double MinimumIncrement READ minimumIncrement)
diff --git a/src/generated/value_adaptor.cpp b/src/generated/value_adaptor.cpp
index 812c0d0..60f8afd 100644
--- a/src/generated/value_adaptor.cpp
+++ b/src/generated/value_adaptor.cpp
@@ -39,7 +39,7 @@ double ValueAdaptor::currentValue() const
     return qvariant_cast< double >(parent()->property("CurrentValue"));
 }
 
-void ValueAdaptor::setCurrentValue(double value)
+void ValueAdaptor::SetCurrentValue(double value)
 {
     // set the value of property CurrentValue
     parent()->setProperty("CurrentValue", qVariantFromValue(value));
diff --git a/src/generated/value_adaptor.h b/src/generated/value_adaptor.h
index 7d82c2a..35d04b2 100644
--- a/src/generated/value_adaptor.h
+++ b/src/generated/value_adaptor.h
@@ -35,16 +35,23 @@ class ValueAdaptor: public QDBusAbstractAdaptor
 "    <property access=\"read\" type=\"d\" name=\"MaximumValue\"/>\n"
 "    <property access=\"read\" type=\"d\" name=\"MinimumIncrement\"/>\n"
 "    <property access=\"readwrite\" type=\"d\" name=\"CurrentValue\"/>\n"
+"    <method name=\"SetCurrentValue\">\n"
+"      <arg direction=\"in\" type=\"d\" name=\"value\"/>\n"
+"    </method>\n"
 "  </interface>\n"
         "")
 public:
     ValueAdaptor(QObject *parent);
     virtual ~ValueAdaptor();
 
+public slots:
+    //Temporal fix
+    //See https://bugzilla.gnome.org/show_bug.cgi?id=652596
+    void SetCurrentValue(double value);
+
 public: // PROPERTIES
-    Q_PROPERTY(double CurrentValue READ currentValue WRITE setCurrentValue)
+    Q_PROPERTY(double CurrentValue READ currentValue WRITE SetCurrentValue)
     double currentValue() const;
-    void setCurrentValue(double value);
 
     Q_PROPERTY(double MaximumValue READ maximumValue)
     double maximumValue() const;
