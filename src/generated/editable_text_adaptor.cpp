/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i marshallers.h -a editable_text_adaptor ../../xml/EditableText.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "editable_text_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class EditableTextAdaptor
 */

EditableTextAdaptor::EditableTextAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

EditableTextAdaptor::~EditableTextAdaptor()
{
    // destructor
}

void EditableTextAdaptor::CopyText(int startPos, int endPos)
{
    // handle method call org.a11y.atspi.EditableText.CopyText
    QMetaObject::invokeMethod(parent(), "CopyText", Q_ARG(int, startPos), Q_ARG(int, endPos));
}

bool EditableTextAdaptor::CutText(int startPos, int endPos)
{
    // handle method call org.a11y.atspi.EditableText.CutText
    bool out0;
    QMetaObject::invokeMethod(parent(), "CutText", Q_RETURN_ARG(bool, out0), Q_ARG(int, startPos), Q_ARG(int, endPos));
    return out0;
}

bool EditableTextAdaptor::DeleteText(int startPos, int endPos)
{
    // handle method call org.a11y.atspi.EditableText.DeleteText
    bool out0;
    QMetaObject::invokeMethod(parent(), "DeleteText", Q_RETURN_ARG(bool, out0), Q_ARG(int, startPos), Q_ARG(int, endPos));
    return out0;
}

bool EditableTextAdaptor::InsertText(int position, const QString &text, int length)
{
    // handle method call org.a11y.atspi.EditableText.InsertText
    bool out0;
    QMetaObject::invokeMethod(parent(), "InsertText", Q_RETURN_ARG(bool, out0), Q_ARG(int, position), Q_ARG(QString, text), Q_ARG(int, length));
    return out0;
}

bool EditableTextAdaptor::PasteText(int position)
{
    // handle method call org.a11y.atspi.EditableText.PasteText
    bool out0;
    QMetaObject::invokeMethod(parent(), "PasteText", Q_RETURN_ARG(bool, out0), Q_ARG(int, position));
    return out0;
}

bool EditableTextAdaptor::SetTextContents(const QString &newContents)
{
    // handle method call org.a11y.atspi.EditableText.SetTextContents
    bool out0;
    QMetaObject::invokeMethod(parent(), "SetTextContents", Q_RETURN_ARG(bool, out0), Q_ARG(QString, newContents));
    return out0;
}

