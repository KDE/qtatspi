/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i adaptor.h -a component_adaptor -l QSpiAdaptor ../../xml/Component.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COMPONENT_ADAPTOR_H_1297240343
#define COMPONENT_ADAPTOR_H_1297240343

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "adaptor.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.a11y.atspi.Component
 */
class ComponentAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.a11y.atspi.Component")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.a11y.atspi.Component\">\n"
"    <method name=\"Contains\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"GetAccessibleAtPoint\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"(so)\"/>\n"
"      <annotation value=\"QSpiObjectReference\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"GetExtents\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"(iiii)\"/>\n"
"      <annotation value=\"QSpiRect\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"    </method>\n"
"    <method name=\"GetPosition\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"y\"/>\n"
"    </method>\n"
"    <method name=\"GetSize\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"height\"/>\n"
"    </method>\n"
"    <method name=\"GetLayer\">\n"
"      <arg direction=\"out\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"GetMDIZOrder\">\n"
"      <arg direction=\"out\" type=\"n\"/>\n"
"    </method>\n"
"    <method name=\"GrabFocus\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"GetAlpha\">\n"
"      <arg direction=\"out\" type=\"d\"/>\n"
"    </method>\n"
"    <method name=\"SetExtents\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"height\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"SetPosition\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"coord_type\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"SetSize\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"height\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ComponentAdaptor(QSpiAdaptor *parent);
    virtual ~ComponentAdaptor();

    inline QSpiAdaptor *parent() const
    { return static_cast<QSpiAdaptor *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool Contains(int x, int y, uint coord_type);
    QSpiObjectReference GetAccessibleAtPoint(int x, int y, uint coord_type);
    double GetAlpha();
    QSpiRect GetExtents(uint coord_type);
    uint GetLayer();
    short GetMDIZOrder();
    int GetPosition(uint coord_type, int &y);
    int GetSize(int &height);
    bool GrabFocus();
    bool SetExtents(int x, int y, int width, int height, uint coord_type);
    bool SetPosition(int x, int y, uint coord_type);
    bool SetSize(int width, int height);
Q_SIGNALS: // SIGNALS
};

#endif
