<?xml version="1.0" encoding="UTF-8"?>
<node xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0" name="/node">

<tp:enum name="LOCALE_TYPE" type="u">
  <tp:docstring>
  Used by Text and Document interfaces these correspond to the POSIX 'setlocale' enum values. 
  </tp:docstring>
  <tp:enumvalue suffix="LOCALE_TYPE_MESSAGES"/>
  <tp:enumvalue suffix="LOCALE_TYPE_COLLATE" value="1"/>
  <tp:enumvalue suffix="LOCALE_TYPE_CTYPE" value="2"/>
  <tp:enumvalue suffix="LOCALE_TYPE_MONETARY" value="3"/>
  <tp:enumvalue suffix="LOCALE_TYPE_NUMERIC" value="4"/>
  <tp:enumvalue suffix="LOCALE_TYPE_TIME" value="5"/>
</tp:enum>
<tp:struct name="BoundingBox">
  <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
    Used by Component and Text interfaces, a struct defining a bounding rectangle. 
    The relevant coordinate system is determined by the context of the
    API call which returned or receives the value.
  </tp:docstring>
  <tp:member type="i" tp:name="x">
  <tp:docstring>
    The value corresponding to the minimum or leftmost x position. 
  </tp:docstring>
  </tp:member>
  <tp:member type="i" tp:name="y">
  <tp:docstring>
    The value corresponding to the minimum y value.  
  </tp:docstring>
  </tp:member>
  <tp:member type="i" tp:name="width">
  <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
    The horizontal extent of the bounding box,
    that is, the difference between the maximum and minimum
    x coordinate bounds.
  </tp:docstring>
  </tp:member>
  <tp:member type="i" tp:name="height">
  <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      The vertical extent of the bounding box, 
      that is, the difference between the maximum and minimum
      y coordinate bounds.
  </tp:docstring>
  </tp:member>
</tp:struct>
<interface name="org.freedesktop.atspi.Accessible">
  <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
    <p>The base interface which is implemented by all accessible objects. 
      All objects support interfaces for querying their contained 'children' 
      and position in the accessible-object hierarchy, whether or not they
      actually have children.  </p>

    <p>Events that may be emitted by instances of Accessible include:
      "object:property-change" A base (strongly-typed) object attribute has changed,
      for instance "object:property-change:accessible-name".
      Notifed property subtypes include accessible-name, accessible-description,
      accessible-parent and accessible-role.</p>

    <p>"object:children-changed" The number or identity of an object's children
      has changed.
      
      "object:state-changed" The object's StateSet has had a state added
      or removed.
      
      "object:active-descendant-changed" If the object includes 
      STATE_MANAGES_DESCENDANTS, this event is fired to indicate that the 
      descendant having STATE_ACTIVE has changed; this corresponds to
      "micro" keyboard focus when the containing/emitting object has
      "macro" or technical keyboard focus.  For instance, this event is
      usually emitted while traversing tables and/or spreadsheet cells.
      
      "object:attribute-change" A weakly-typed property, as contained in the
      AttributeSet returned by Accessible::getAttributes, has changed in value,
      been added, or been removed from the object.
      ("object:attribute-change" notifications were added in AT-SPI 1.7.0)</p>

  </tp:docstring>
  <tp:property name="name" type="s" access="readwrite">
  <tp:docstring>
    A (short) string representing the object's name.
  </tp:docstring>
  </tp:property>
  <tp:property name="description" type="s" access="readwrite">
  <tp:docstring>
    A string describing the object in more detail than name.
  </tp:docstring>
  </tp:property>
  <tp:property name="parent" type="o" access="read">
  <tp:docstring>
    The Accessible object which is this object's containing object.
  </tp:docstring>
  </tp:property>
  <tp:property name="childCount" type="i" access="read">
  <tp:docstring>
    The number of children contained by this object.
  </tp:docstring>
  </tp:property>
  <method name="getChildren">
    <tp:docstring>
      Get the accessible children of this object.
    </tp:docstring>
    <arg direction="out" type="ao" tp:type="AccessibleSet">
    <tp:docstring>
      The Accessible children of this object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getChildAtIndex">
    <tp:docstring>
      Get the accessible child of this object at \c index.
    </tp:docstring>
    <arg direction="in" name="index" type="i">
    <tp:docstring>
      an in parameter indicating which child is requested (zero-indexed).
    </tp:docstring>
    </arg>
    <arg direction="out" type="o" tp:type="Accessible">
    <tp:docstring>
      the 'nth' ::Accessible child of this object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getIndexInParent">
    <tp:docstring>
      Get the index of this object in its parent's child list.
    </tp:docstring>
    <arg direction="out" type="i">
    <tp:docstring>
      A long integer indicating this object's index in the parent's list.
    </tp:docstring>
    </arg>
  </method>
  <method name="getRelationSet">
    <tp:docstring>
      Get a set defining this object's relationship to other accessible objects.
    </tp:docstring>
    <arg direction="out" type="a(uao)" tp:type="RelationSet">
            <annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QSpiRelationArray"/>
    <tp:docstring>
      A RelationSet defining this object's relationships.
    </tp:docstring>
    </arg>
  </method>
  <method name="getRole">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      Get the Role indicating the type of UI role played by this object.
    </tp:docstring>
    <arg direction="out" type="u" tp:type="Role">
    <tp:docstring>
      A Role indicating the type of UI role played by this object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getRoleName">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      Get a string indicating the type of UI role played by this object.
    </tp:docstring>
    <arg direction="out" type="s">
    <tp:docstring>
      A UTF-8 string indicating the type of UI role played by this object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getLocalizedRoleName">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      Get a string indicating the type of UI role played by this object,
      translated to the current locale.
    </tp:docstring>
    <arg direction="out" type="s">
    <tp:docstring>
      A UTF-8 string indicating the type of UI role played by this object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getState">
    <tp:docstring>
      Get the current state of the object as a StateSet.
    </tp:docstring>
    <arg direction="out" type="au" tp:type="StateSet">
            <annotation name="com.trolltech.QtDBus.QtTypeName.Out0" value="QSpiStateSet"/>
    <tp:docstring>
      A StateSet encapsulating the currently true states of the object.
      Returns an array of (currently two) 32-bit integers giving bitwise flags.
    </tp:docstring>
    </arg>
  </method>
  <method name="getAttributes">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>Get a list of properties applied to this object as a whole, as an 
        AttributeSet consisting of name-value pairs. As such these attributes
        may be considered weakly-typed properties or annotations, as distinct
        from the strongly-typed interface instance data declared using the IDL 
        "attribute" keyword.</p>

      <p>Not all objects have explicit "name-value pair" AttributeSet properties.      </p>

      <p>Attribute names and values may have any UTF-8 string value, however where possible,
        in order to facilitate consistent use and exposure of "attribute" properties by
        applications and AT clients, attribute names and values should chosen from  
        a publicly-specified namespace where appropriate.</p>

      <p>Where possible, the names and values in the name-value pairs
        should be chosen from well-established attribute namespaces
        using standard semantics.       
        For example, attributes of Accessible objects corresponding to XHTML content 
        elements should correspond to attribute names and values specified in the w3c 
        XHTML specification, at http://www.w3.org/TR/xhtml2, where such values are not 
        already exposed via a more strongly-typed aspect of the AT-SPI API.
        Metadata names and
        values should be chosen from the 'Dublin Core' Metadata
        namespace using Dublin Core semantics:
        http://dublincore.org/dcregistry/
        Similarly, relevant structural metadata should be exposed
        using attribute names and values chosen from the CSS2 and WICD specification:
        http://www.w3.org/TR/1998/REC-CSS2-19980512
        WICD (http://www.w3.org/TR/2005/WD-WICD-20051121/).    </p>

      <p>Clients seeking semantic or typographical attributes associated with
        specific character spans of text content should use Text.getAttributeRun instead.
        The attributes returned by Accessible.getAttributes do not include
        "text attributes". (See Text.getAttributeRun)</p>

    </tp:docstring>
    <arg direction="out" type="as" tp:type="AttributeSet">
    <tp:docstring>
      An AttributeSet encapsulating any "attribute values" currently defined for the object.
    </tp:docstring>
    </arg>
  </method>
  <method name="getApplication">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>Get the containing Application for this object.</p>
    </tp:docstring>
    <arg direction="out" type="o" tp:type="Application">
    <tp:docstring>
      The Application instance to which this object belongs.
    </tp:docstring>
    </arg>
  </method>
</interface>
</node>
